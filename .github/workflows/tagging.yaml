name: Dispatch Tagging

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'タグを打ちたい commit を入力してください'
        required: true
        type: string
      tag:
        description: 'タグを指定してください'
        required: true
        type: string
      force:
        description: '強制上書きする場合はチェックを入れてください'
        required: false
        type: boolean

permissions:
  contents: write

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Remove old tag
        if: inputs.force == true
        uses: actions/github-script@v6
        with:
          script: |
            const params = {
              owner: '${{ github.repository }}'.split('/')[0],
              repo: '${{ github.repository }}'.split('/')[1],
              ref: 'tags/${{ inputs.tag }}'
            };

            await github
              .request("GET /repos/{owner}/{repo}/git/ref/{ref}", params)
              .then(async (response) => {
                await github
                  .request("DELETE /repos/{owner}/{repo}/git/refs/{ref}", params)
              })
              .catch(async (response) => {
                if (response.status != 404) {
                  console.log("例外おきたぽよ")
                }
              })
      # タグを打つだけならこっちの step は不要
      # - name: Create a tag object
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const params = {
      #         owner: '${{ github.repository }}'.split('/')[0],
      #         repo: '${{ github.repository }}'.split('/')[1],
      #         object: '${{ inputs.commit_sha }}',
      #         message: '${{ inputs.tag }}',
      #         type: 'commit',
      #         tag: '${{ inputs.tag }}',
      #         headers: {
      #           'X-GitHub-Api-Version': '2022-11-28'
      #         }
      #       }
      #       await github
      #         .request('POST /repos/{owner}/{repo}/git/tags', params)
      #         // .then(async (response: Response) => {
      #         //   console.log(response.data.tag)
      #         //   console.log(response.data.sha)
      #         // });
      - name: Create a reference of tag
        uses: actions/github-script@v6
        with:
          # github-token: ${{ secrets.PAT }}
          script: |
            await github.request('POST /repos/{owner}/{repo}/git/refs', {
              owner: '${{ github.repository }}'.split('/')[0],
              repo: '${{ github.repository }}'.split('/')[1],
              ref: 'refs/tags/${{ inputs.tag }}',
              sha: '${{ inputs.commit_sha }}',
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
      # - name: tagging2
      #   env:
      #     GH_TOKEN: ${{ secrets.PAT }}
      #   run: |
      #     gh api \
      #       --method POST \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       /repos/${{ github.repository }}/git/refs \
      #       -f ref='refs/tags/${{ inputs.tag }}' \
      #       -f sha='${{ inputs.commit_sha }}'
